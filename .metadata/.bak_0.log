!SESSION 2023-06-23 13:45:40.576 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-06-23 13:45:44.419
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-06-23 13:46:01.617
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-06-23 13:46:17.209
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-23 13:46:17.209
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-23 13:46:17.209
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-06-23 13:46:29.694
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-06-25 17:47:20.132 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-06-25 17:47:28.656
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-06-25 17:47:39.349
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-06-25 17:47:55.016
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-25 17:47:55.017
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-25 17:47:55.017
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-06-25 17:48:05.570
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-06-26 10:09:25.860 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-06-26 10:09:31.661
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-06-26 10:09:39.069
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-06-26 10:09:53.713
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-26 10:09:53.713
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-26 10:09:53.714
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-06-26 10:10:02.565
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-06-28 12:58:36.594 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-06-28 12:58:42.812
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-06-28 12:58:51.564
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-06-28 12:59:07.298
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-28 12:59:07.298
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-28 12:59:07.298
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-06-28 12:59:17.492
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-06-28 19:49:05.223 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-06-28 19:49:11.926
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-06-28 19:49:21.441
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-06-28 19:49:36.852
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-28 19:49:36.852
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-06-28 19:49:36.852
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-06-28 19:49:47.390
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-01 13:00:13.705 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-01 13:00:17.964
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-01 13:00:24.666
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-01 13:00:38.333
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-01 13:00:38.333
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-01 13:00:38.334
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-01 13:00:48.764
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-01 20:01:14.809 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-01 20:01:21.290
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-01 20:01:28.121
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-01 20:01:40.582
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-01 20:01:40.582
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-01 20:01:40.582
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-01 20:01:48.721
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui.ide 4 4 2023-07-01 20:24:06.223
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:668)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:241)
	at org.eclipse.jface.resource.DeferredImageDescriptor.createImage(DeferredImageDescriptor.java:85)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:97)
	at org.eclipse.jface.resource.LocalResourceManager.allocate(LocalResourceManager.java:72)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImage(ResourceManager.java:175)
	at org.eclipse.ui.actions.OpenWithMenu.getImage(OpenWithMenu.java:137)
	at org.eclipse.ui.actions.OpenWithMenu.createMenuItem(OpenWithMenu.java:174)
	at org.eclipse.ui.actions.OpenWithMenu.fill(OpenWithMenu.java:271)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.processContents(MenuManagerRenderer.java:655)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeTopicChildAdded(MenuManagerRenderer.java:325)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4785)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.emf.ecore.util.EcoreEList.dispatchNotification(EcoreEList.java:249)
	at org.eclipse.emf.common.notify.impl.NotifyingListImpl.addUnique(NotifyingListImpl.java:294)
	at org.eclipse.emf.common.util.AbstractEList.add(AbstractEList.java:304)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.reconcileManagerToModel(MenuManagerRenderer.java:1076)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.reconcileManagerToModel(MenuManagerRenderer.java:1014)
	at org.eclipse.ui.internal.PopupMenuExtender.addMenuContributions(PopupMenuExtender.java:379)
	at org.eclipse.ui.internal.PopupMenuExtender.menuAboutToShow(PopupMenuExtender.java:355)
	at org.eclipse.jface.action.MenuManager.fireAboutToShow(MenuManager.java:338)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:468)
	at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:495)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:259)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4256)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1071)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:5140)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4772)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1478)
	at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2284)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:237)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:4095)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3636)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SESSION 2023-07-02 15:34:27.903 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-02 15:34:37.524
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-02 15:34:49.923
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-02 15:35:03.011
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-02 15:35:03.011
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-02 15:35:03.011
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-02 15:35:15.916
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-04 08:59:32.108 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-04 08:59:39.727
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-04 08:59:50.183
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-04 09:00:09.896
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-04 09:00:09.896
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-04 09:00:09.896
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-04 09:00:23.236
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-05 10:19:24.609 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-05 10:19:30.111
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-05 10:19:37.779
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-05 10:19:53.179
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-05 10:19:53.179
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-05 10:19:53.180
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-05 10:20:07.832
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-05 15:49:53.189 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-05 15:49:57.791
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-05 15:50:02.900
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-05 15:50:14.896
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-05 15:50:14.896
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-05 15:50:14.896
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-05 15:50:24.514
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-06 11:18:36.216 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-06 11:18:44.041
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-06 11:18:52.450
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-06 11:19:06.535
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-06 11:19:06.535
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-06 11:19:06.535
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-06 11:19:14.935
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2023-07-06 13:23:16.183
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

import HappyFacesButtons.NewPosImageIcon;


public class MyFrame extends JFrame{

	final int WIDTH = 500;
	final int HEIGHT = 300;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int delay = 0;
	
	ArrayList<PosImageIcon> list = new ArrayList<>();
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();

	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			MainPanel panel = new MainPanel();
			JPanel bPanel = new JPanel();
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(600, 400);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			
	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			delay += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				t.start();
				doLists();
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) {	// 이 메소드는 화면이 리프레쉬될때마다 실행됨
			int w = this.getWidth();				// 현재의 패널 넓이 획득
			int h= this.getHeight();				// 현재의 패널 높이 획득
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);					// 흰색으로 칠해 줌
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);					// 구분선도 칠해 줌
			
			
			// 좌표를 조정하고 그림을 그려줌
			for (PosImageIcon pi : list) {
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 0 || pi.pX >= w-50)
					pi.moveX = pi.moveX * -1;
				if (delay > 5000) {
					delay = 0;
					pi.pY-1
				}
				pi.draw(g);							// 그림을 그림
			}
		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = -1;		// x축으로의 방향과 보폭
		int moveY = 1;		// y축으로의 방향과 보폭
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY = y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	public void doLists() {
		list.clear();
		for(int i = 0; i < 5; i++) {
			int x = (int) (Math.random()*400);
			int y = 0;		
			list.add(new PosImageIcon("삼각형.png", x, y, 100, 100));
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3032)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-06 13:23:16.188
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3032)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-06 13:23:16.191
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3032)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-06 13:23:16.268
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

import HappyFacesButtons.NewPosImageIcon;


public class MyFrame extends JFrame{

	final int WIDTH = 500;
	final int HEIGHT = 300;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int delay = 0;
	
	ArrayList<PosImageIcon> list = new ArrayList<>();
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();

	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			MainPanel panel = new MainPanel();
			JPanel bPanel = new JPanel();
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(600, 400);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			
	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			delay += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				t.start();
				doLists();
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) {	// 이 메소드는 화면이 리프레쉬될때마다 실행됨
			int w = this.getWidth();				// 현재의 패널 넓이 획득
			int h= this.getHeight();				// 현재의 패널 높이 획득
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);					// 흰색으로 칠해 줌
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);					// 구분선도 칠해 줌
			
			
			// 좌표를 조정하고 그림을 그려줌
			for (PosImageIcon pi : list) {
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 0 || pi.pX >= w-50)
					pi.moveX = pi.moveX * -1;
				if (delay > 5000) {
					delay = 0;
					pi.pY-1
				}
				pi.draw(g);							// 그림을 그림
			}
		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = -1;		// x축으로의 방향과 보폭
		int moveY = 1;		// y축으로의 방향과 보폭
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY = y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	public void doLists() {
		list.clear();
		for(int i = 0; i < 5; i++) {
			int x = (int) (Math.random()*400);
			int y = 0;		
			list.add(new PosImageIcon("삼각형.png", x, y, 100, 100));
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3032)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-06 13:23:16.273
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3032)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-06 13:23:16.276
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3032)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2023-07-07 14:10:31.606 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-07 14:10:36.933
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-07 14:10:45.142
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-07 14:10:59.069
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-07 14:10:59.070
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-07 14:10:59.070
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-07 14:11:09.162
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-08 14:47:55.851 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-08 14:48:02.357
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-08 14:48:10.732
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-08 14:48:23.487
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-08 14:48:23.487
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-08 14:48:23.487
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-08 14:48:35.514
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-09 13:31:07.913 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-09 13:31:14.794
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-09 13:31:23.066
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-09 13:31:35.161
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-09 13:31:35.161
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-09 13:31:35.161
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-09 13:31:44.603
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-10 10:09:58.116 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-10 10:10:14.376
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-10 10:10:26.549
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-10 10:10:44.215
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-10 10:10:44.215
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-10 10:10:44.215
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-10 10:10:54.567
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-10 21:10:44.950 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-10 21:10:51.588
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-10 21:11:00.557
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-10 21:11:18.051
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-10 21:11:18.051
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-10 21:11:18.051
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-10 21:11:28.009
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-11 11:22:57.743 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-11 11:23:02.042
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-11 11:23:09.715
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-11 11:23:28.658
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-11 11:23:28.658
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-11 11:23:28.658
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-11 11:23:41.067
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-11 15:12:44.495 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-11 15:12:47.138
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-11 15:12:49.850
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-11 15:12:54.366
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-11 15:12:54.366
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-11 15:12:54.366
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-11 15:13:03.232
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-12 10:30:25.811 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-12 10:30:31.714
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-12 10:30:41.348
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-12 10:30:57.006
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-12 10:30:57.006
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-12 10:30:57.006
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-12 10:31:05.404
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-12 16:50:32.525 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-12 16:50:40.852
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-12 16:50:48.836
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-12 16:51:04.323
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-12 16:51:04.323
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-12 16:51:04.323
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-12 16:51:17.387
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-13 11:01:10.241 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-13 11:01:26.102
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-13 11:01:39.832
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-13 11:02:00.921
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-13 11:02:00.921
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-13 11:02:00.921
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-13 11:02:17.921
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-13 15:31:29.506 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-13 15:31:36.152
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-13 15:31:45.917
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-13 15:32:00.081
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-13 15:32:00.081
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-13 15:32:00.081
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-13 15:32:10.362
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2023-07-13 16:59:52.851
!MESSAGE Could not retrieve declared fields
!STACK 0
org.eclipse.core.runtime.OperationCanceledException
	at org.eclipse.jdt.internal.core.AbstractClassFile.getClassFileContent(AbstractClassFile.java:237)
	at org.eclipse.jdt.internal.core.ClassFile.getJarBinaryTypeInfo(ClassFile.java:240)
	at org.eclipse.jdt.internal.core.ClassFile.getBinaryTypeInfo(ClassFile.java:201)
	at org.eclipse.jdt.internal.core.ClassFile.buildStructure(ClassFile.java:92)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.SourceRefElement.generateInfos(SourceRefElement.java:113)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.BinaryType.getElementInfo(BinaryType.java:288)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:314)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.createAnswer(SearchableEnvironment.java:247)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.find(SearchableEnvironment.java:198)
	at org.eclipse.jdt.internal.core.SearchableEnvironment.findType(SearchableEnvironment.java:527)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.lambda$0(LookupEnvironment.java:240)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForTypeFromModules(LookupEnvironment.java:384)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:239)
	at org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:116)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:251)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveTypeFor(BinaryTypeBinding.java:1909)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableFields(BinaryTypeBinding.java:377)
	at org.eclipse.jdt.core.dom.TypeBinding.getDeclaredFields(TypeBinding.java:249)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.addInherited(ScopeAnalyzer.java:214)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.addInherited(ScopeAnalyzer.java:206)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.addInherited(ScopeAnalyzer.java:243)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.addInherited(ScopeAnalyzer.java:206)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.addInherited(ScopeAnalyzer.java:243)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.addInherited(ScopeAnalyzer.java:206)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.addInherited(ScopeAnalyzer.java:243)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.addInherited(ScopeAnalyzer.java:206)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.addTypeDeclarations(ScopeAnalyzer.java:278)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.addTypeDeclarations(ScopeAnalyzer.java:285)
	at org.eclipse.jdt.internal.corext.dom.ScopeAnalyzer.getDeclarationsInScope(ScopeAnalyzer.java:549)
	at org.eclipse.jdt.internal.corext.codemanipulation.ContextSensitiveImportRewriteContext.getDeclarationsInScope(ContextSensitiveImportRewriteContext.java:216)
	at org.eclipse.jdt.internal.corext.codemanipulation.ContextSensitiveImportRewriteContext.findInContext(ContextSensitiveImportRewriteContext.java:96)
	at org.eclipse.jdt.core.dom.rewrite.ImportRewrite.internalAddImport(ImportRewrite.java:1219)
	at org.eclipse.jdt.core.dom.rewrite.ImportRewrite.addImport(ImportRewrite.java:1062)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.createTypeRefChangeProposal(UnresolvedElementsSubProcessor.java:1005)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.addSimilarTypeProposals(UnresolvedElementsSubProcessor.java:912)
	at org.eclipse.jdt.internal.ui.text.correction.UnresolvedElementsSubProcessor.getTypeProposals(UnresolvedElementsSubProcessor.java:683)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.process(QuickFixProcessor.java:424)
	at org.eclipse.jdt.internal.ui.text.correction.QuickFixProcessor.getCorrections(QuickFixProcessor.java:361)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionCollector.safeRun(JavaCorrectionProcessor.java:381)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.run(JavaCorrectionProcessor.java:341)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor$SafeCorrectionProcessorAccess.process(JavaCorrectionProcessor.java:336)
	at org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:465)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:115)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.computeCompletionProposals(ProblemHover.java:89)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.<init>(ProblemHover.java:74)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover.createAnnotationInfo(ProblemHover.java:178)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover.getHoverInfo2(AbstractAnnotationHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-07-14 09:55:05.463 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-14 09:55:17.757
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-14 09:55:28.813
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-14 09:55:41.425
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-14 09:55:41.425
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-14 09:55:41.425
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-14 09:55:52.760
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-15 10:12:41.923 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-15 10:12:48.960
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-15 10:12:57.405
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-15 10:13:08.412
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-15 10:13:08.412
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-15 10:13:08.412
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-15 10:13:15.872
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-16 14:47:34.064 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-16 14:47:39.422
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-16 14:47:47.821
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-16 14:48:02.515
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-16 14:48:02.516
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-16 14:48:02.516
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-16 14:48:13.840
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-07-17 08:55:31.456 -----------------------------------------------
eclipse.buildId=4.27.0.20230309-1200
java.version=20.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY ch.qos.logback.classic 1 0 2023-07-17 08:55:39.236
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-07-17 08:55:50.596
!MESSAGE Logback config file: C:\Users\Daehee\Desktop\20205110\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.100.20230106-1511.xml

!ENTRY org.eclipse.jface 2 0 2023-07-17 08:56:13.387
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-17 08:56:13.387
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-07-17 08:56:13.387
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-07-17 08:56:21.614
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Daehee'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:16:35.138
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score);

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:16:35.166
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:16:35.169
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:16:35.229
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score);

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:16:35.232
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:16:35.237
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:16:36.163
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score);

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:16:36.169
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:16:36.171
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:16:37.479
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:16:37.483
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:16:37.485
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:16:37.623
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:16:37.628
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:16:37.630
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:16:39.386
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:16:39.389
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:16:39.391
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:16:46.483
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:16:46.487
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:16:46.488
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:16:46.624
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3640)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:16:46.629
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3640)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:16:46.631
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3640)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:16:53.214
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:16:53.216
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:16:53.217
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:03.805
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:03.807
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:03.808
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:05.207
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:05.210
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:05.212
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:06.219
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3640)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:06.223
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3640)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:06.228
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5022)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3640)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:07.758
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:07.761
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:07.764
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:10.440
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:10.442
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:10.443
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:12.596
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:12.599
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:12.600
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:13.651
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:13.654
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:13.655
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:14.540
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:14.542
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:14.543
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:17.957
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:17.959
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:17.961
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:20.418
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:20.422
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:20.424
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:23.226
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:23.228
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:23.230
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:23.278
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:23.280
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:23.282
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:34.101
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:34.104
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:34.106
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:34.922
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("게임오버!", 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:17:34.924
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:17:34.925
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:35.110
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("게임오버!", 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:35.113
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:35.115
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:36.540
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("게임오버!", 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:36.543
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:36.544
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:38.996
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("", 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:17:38.999
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:17:39.000
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:39.075
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("", 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:39.077
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:39.078
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:42.107
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수", 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:17:42.109
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:17:42.110
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:42.185
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수", 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:42.187
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:42.189
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:43.943
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = ", 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:17:43.945
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:17:43.946
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:43.981
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = ", 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:43.984
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:43.986
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:47.655
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = "+, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:17:47.659
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:17:47.660
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:47.771
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = "+, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:47.773
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:47.774
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:49.111
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + , 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:17:49.112
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:17:49.113
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:49.308
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + , 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:49.311
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:49.312
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:50.977
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + sc, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:50.979
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + sc, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:17:50.981
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:50.983
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:17:50.985
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:50.987
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:51.874
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:17:51.875
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:17:51.876
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:51.950
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:51.952
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:51.953
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:53.608
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:53.609
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:53.611
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.432
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-07-17 12:17:56.435
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-07-17 12:17:56.438
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.479
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.482
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.485
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.536
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.539
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.541
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.589
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.591
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.593
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.645
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.648
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.650
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.688
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.691
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.692
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.722
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.724
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.726
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.779
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.782
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.784
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.827
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.829
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.832
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.860
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.862
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.864
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.900
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.903
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.904
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.938
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-07-17 12:17:56.940
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-07-17 12:17:56.942
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-07-17 12:17:56.977
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;







public class MyFrame extends JFrame implements MouseListener{

	
	final int WIDTH = 1300;
	final int HEIGHT = 800;
	Timer t;
	JButton sB;
	JButton rB;
	JButton qB;
	int timeForEGen = 0;
	int pOfMeX;
	int pOfMeY;
	int pOfBulletX;
	int pOfBulletY;
	int fireB;
	int shape = 3;
	int score = 0;
	double amountOfE = 5.0;
	int fireRange = 100;
	int level = 1;
	int eYSpeed = -1;
	int eXSpeed = -1;
	
	
	ArrayList<PosImageIcon> sList = new ArrayList<>();
	ArrayList<PosImageIcon> list = new ArrayList<>();
	shooter s = new shooter("비행기.png", 0, 0, 200, 200);
	bullet b = new bullet();
	enemyGen eG;
	levelUpStar star;
	MainPanel panel;
	JPanel bPanel;
	
	public static void main(String[] args) {									//메인함수
		MyFrame m = new MyFrame();
		
	}
	
	public MyFrame() {															//프레임
			setTitle("Color Shooting");
			
			
			panel = new MainPanel();
			bPanel = new JPanel();
			
			mouseAction mMove = new mouseAction();
			panel.addMouseListener(this);
			panel.addMouseMotionListener(mMove);
			
			sB = new JButton("시작");
			rB = new JButton("계속");
			qB = new JButton("중지");
			
			this.setLayout(new BorderLayout());
			bPanel.add(sB);
			bPanel.add(rB);
			bPanel.add(qB);
			this.add(BorderLayout.CENTER, panel);
			this.getContentPane().add(BorderLayout.SOUTH, bPanel);
			setSize(WIDTH, HEIGHT);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setVisible(true);
			
			ButtonListener bL = new ButtonListener();
			sB.addActionListener(bL);
			rB.addActionListener(bL);
			qB.addActionListener(bL);
			t = new Timer(10, new myClass());
			("점수 = " + score)

	}
	
	private class myClass implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			timeForEGen += 10;
			repaint();					// 포함하는 프레임이 다시 그려지게 함.
		}	
	}
	
	private class ButtonListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() == sB) {
				panel.removeAll();
				shape = 3;
				t.stop();
				t.start();
				eG = new enemyGen();

				timeForEGen = 0;
				
			}
			if (e.getSource() == qB) {
				t.stop();				
			}
			else if (e.getSource() == rB) {
				t.restart();
			}
		}	
	}
	class MainPanel extends JPanel {
		public void paintComponent(Graphics g) { 						//페인트 컴포넌트: 동작화면
			g.drawLine(pOfMeX+100, pOfMeY, pOfMeX+100, pOfMeY+1000);
			int w = this.getWidth();
			int h= this.getHeight();				
			g.setColor(Color.white);				
			g.fillRect(0,0,w,h);
			g.setColor(Color.black);
			g.drawLine(0, 0, w, 0);	
			
			

			
			for (PosImageIcon pi : list) {								//적 생성 및 게임오버
				pi.move(pi.moveX, pi.moveY);
				if (pi.pX <= 50) {
					panel.removeAll();
					list.clear();
					sList.clear();
					g.setColor(Color.RED);					
					g.setFont(new Font("굴림체", Font.ITALIC, 100));
					g.drawString("게임오버!", 50, 200);
					g.setFont(new Font("굴림체", Font.ITALIC, 60));
					g.drawString("점수 = " + score, 50, 300);
					t.stop();
					break;
				}
				if (pi.pY <= 0 || pi.pY >= h-55)
					pi.moveY = pi.moveY * -1;
				pi.draw(g);							
			}
			for (PosImageIcon piS : sList) {
				piS.move(piS.moveX, piS.moveY);
				if (piS.pX <= 30) {
					b.bulletSpeed += level;
					sList.remove(piS);
				}
				if (piS.pY <= 0 || piS.pY >= h-55)
					piS.moveY = piS.moveY * -1;
				piS.draw(g);			
			}
			
			if(timeForEGen >= 3000) {
				timeForEGen = 0;
				eG = new enemyGen();
			}
			if(score >= 3000) {
				amountOfE += 0.001;
			}
			if(score % 3000 == 0) {
				eYSpeed -= 1;
				eXSpeed -= 1;
			}
			g.drawString("점수 = " + score, 50, 200);
			s.draw(g);
			score++;
			int levelI = (int)(Math.random()*(300)+1);
			if(timeForEGen >= 2000) {
				if( levelI > 299) {
					star = new levelUpStar();
				}
			}
			
			for(PosImageIcon i:list) {										// 적기 격추
				if(b.pOfBulletX+100 > i.pX-5 && b.pOfBulletX+100 < i.pX+45 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					list.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			for(PosImageIcon i:sList) {										// 레벨업
				if(b.pOfBulletX+100 > i.pX && b.pOfBulletX+100 < i.pX+50 && b.pOfBulletY > i.pY && b.pOfBulletY < i.pY+50) {
					sList.remove(i);
					System.out.println(b.pOfBulletX + "/" + i.pX);
					break;
				}
			}
			if(fireB == 1) {
				
				b.pOfBulletX += b.bulletSpeed;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			else if(fireB == 0 && b.pOfBulletX > -10) {
				b.pOfBulletX -= b.bulletSpeed-1;
				b.drawBullet(g,10,10);
				if(b.bulletSpeed >= 15) {
					b.bulletSpeed = 15;
				}
			}
			if(b.pOfBulletX > 1180) {
				fireB = 0;
			}

		}
	}
	private class PosImageIcon extends ImageIcon {
		int pX;				// ImageIcon의 X좌표
		int pY;				// ImageIcon의 y좌표
		int width;			// ImageIcon의 넓이
		int height;			// ImageIcon의 높이
		
		int moveX = eXSpeed;		// x축으로의 방향과 보폭
		int moveY = eYSpeed;		// y축으로의 방향과 보폭
		
		public int getPX() {
			return pX;
		}
		
		public PosImageIcon(String img, int x, int y, int width, int height) {
			super(img);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pX=x;
			pY=y;
			this.width = width;
			this.height = height;
		}
		
		// 이미지의 좌표를 움직이는 메소드
		public void move(int x, int y) {
			pX += x;
			pY += y;
		}
		
		// g 라는 Graphics 클래스의 객체(화면)이 주어지면 여기에 현재 객체의 그림을 그려줌 
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), pX, pY, width, height, null);
		}
	}

	
	public class enemyGen {
		public void enemyClear() {
			list.clear();
		}
		public enemyGen() {
			for(int i = 0; i < (int)amountOfE; i++) {
				int y = (int) (Math.random()*(HEIGHT-180));
				int x = (int) (Math.random()*50);
				list.add(new PosImageIcon("삼각형.png", 1250+x, y, 200, 200));
			}
		}
		
		
	}
	
	
	public class shooter extends PosImageIcon {
		int myW;
		int myH;
		
		
		
		public shooter(String img, int x, int y, int width, int height) {
			super(img, x, y, width, height);		// ImageIcon의 생성자 호출하여 이미지 초기화
			pOfMeX=x;
			pOfMeY=y;
			this.myW = width;
			this.myH = height;
		}
		
		public void draw(Graphics g) {
			g.drawImage(this.getImage(), -30, pOfMeY, myW, myH, null);
			g.setColor(Color.red);
			g.drawLine(30, pOfMeY+90, 1300, pOfMeY+90);
			g.setColor(Color.BLACK);
			g.drawLine(50, 0, 50, 800);
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		System.out.println("중지");

	}
	@Override
	public void mouseEntered(MouseEvent e) {
		System.out.println("계속");
	}
	@Override
	public void mousePressed(MouseEvent e) {
		System.out.println(b.bulletSpeed);
		b.boomerang(e.getY());
		fireB = 1;

	}
	@Override
	public void mouseReleased(MouseEvent e) {
		fireB = 0;
	}
	
	public class mouseAction implements MouseMotionListener{
		@Override
		public void mouseDragged(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
		@Override
		public void mouseMoved(MouseEvent e) {
			pOfMeX = e.getX()-90;
			pOfMeY = e.getY()-90;
			b.boomerang(e.getY());
		}
	}
	public class bullet {
		int pOfBulletX;
		int pOfBulletY;
		int bulletSpeed = 5;
		
		public void drawBullet(Graphics g,int x, int y) {
			g.fillOval(pOfBulletX+100, pOfBulletY-5, 10, 10);
		}
		
		public void getMouseP(int eX, int eY) {
			pOfBulletX = eX;
			pOfBulletY = eY;
		}
		public void boomerang(int y) {
			pOfBulletY = y;
		}
	}
	
	public class levelUpStar{
		public void starClear() {
			sList.clear();
		}
		public levelUpStar() {
			int y = (int) (Math.random()*(HEIGHT-180));
			sList.add(new PosImageIcon("별.png", 1160, y, 200, 200));
		}
				
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:263)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:257)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:105)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:360)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:346)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.queue(DecorationScheduler.java:419)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:397)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
